package nl.wifidroid.main;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;

import java.net.ServerSocket;
import java.net.Socket;

import nl.wifidroid.main.WifidroidService.LocalBinder;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;

import android.os.Bundle;
import android.os.IBinder;
import android.os.Looper;
import android.widget.Toast;

public class WifidroidclientActivity extends Activity {

	private WifidroidService Backgroundservice;
	private boolean isBound;
	
    
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
       /* if(Backgroundservice == null){
        	doBindService();
        	}
        }*/
        //Toast.makeText(this, "start", Toast.LENGTH_SHORT).show();
        Toast.makeText(this, "Listening", Toast.LENGTH_LONG).show();//System.out.println("Listening :8888");
        Thread Server = new Thread(new MyServer());
        //Toast.makeText(this, "fixed", Toast.LENGTH_SHORT).show();
        //cm.listen();
    }
  
    private ServiceConnection service_connection = new ServiceConnection(){
    	public void onServiceConnected(ComponentName classname, IBinder service){
    		Backgroundservice = ((LocalBinder)service).getService();
    		Toast.makeText(WifidroidclientActivity.this, "Connected",Toast.LENGTH_LONG).show();
    	}
    	
    	public void onServiceDisconnected(ComponentName className){
    		Backgroundservice = null;
    	}
    };

    public void shownotification(CharSequence text)
    {
    	Toast.makeText(WifidroidclientActivity.this, text, Toast.LENGTH_SHORT).show();
    }
    
    public void doBindService(){
    	bindService(new Intent(this,WifidroidService.class), service_connection,Context.BIND_AUTO_CREATE);
    }
    

    
    private class MyServer implements Runnable {

		public void run() {
			// TODO Auto-generated method stub
			
			try { 
				ServerSocket server = new ServerSocket(8888);
				
				while(true){
					Socket client = server.accept();
				
					System.out.println("Receiving");
					
					try{
						BufferedReader in = new BufferedReader(new InputStreamReader(client.getInputStream()));
						
						String str = in.readLine();
						
						System.out.println("Dit'" + str + "'");
						
					}catch( Exception e){
						System.out.println("FAAL");
						e.printStackTrace();
					}finally {
						client.close();
						
						System.out.println("done");
					}
					
					}
					
				}catch(Exception e){
					System.out.println("faal");
					e.printStackTrace();
				}
			}
			
		}
    	 
    }





