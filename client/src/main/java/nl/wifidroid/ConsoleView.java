package nl.wifidroid;

import java.awt.Rectangle;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author Maarten Blokker
 */
public class ConsoleView extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public ConsoleView() {
        initComponents();
        messageField.addKeyListener(new KeyHandler());
    }

    @Override
    public void addNotify() {
        super.addNotify();
        messageField.requestFocus();
    }

    public void setListener(ActionListener listener) {
        messageButton.addActionListener(listener);
    }

    public String getUserInput() {
        return messageField.getText();
    }

    public void clearUserInput() {
        messageField.setText("");
        messageField.requestFocus();
    }

    public void addMessage(String message) {
        Document document = messagePanel.getDocument();
        int length = document.getLength();

        DateFormat timeFormat = SimpleDateFormat.getTimeInstance();
        Date now = new Date();

        try {
            String format = "%s %s\n";
            String text = String.format(format, timeFormat.format(now), message);
            document.insertString(length, text, null);
        } catch (BadLocationException ex) {
            ex.printStackTrace();
        }

        //scroll to the bottom of the message panel
        messagePanel.revalidate();
        int height = (int) messagePanel.getPreferredSize().getHeight();
        Rectangle rect = new Rectangle(0, height, 10, 10);
        messagePanel.scrollRectToVisible(rect);
    }

    private class KeyHandler extends KeyAdapter {

        @Override
        public void keyPressed(KeyEvent e) {
            int key = e.getKeyCode();
            if (key == KeyEvent.VK_ENTER && !getUserInput().isEmpty()) {
                //simulate a click on the messagebutton if we press enter
                messageButton.doClick();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messagePanel = new javax.swing.JEditorPane();
        messageField = new javax.swing.JTextField();
        messageButton = new javax.swing.JButton();

        messagePanel.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        jScrollPane1.setViewportView(messagePanel);

        messageField.setColumns(70);

        messageButton.setText("Execute");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageField)
                    .addComponent(messageButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton messageButton;
    private javax.swing.JTextField messageField;
    private javax.swing.JEditorPane messagePanel;
    // End of variables declaration//GEN-END:variables
}
